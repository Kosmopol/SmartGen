name: Auto Generate and Deploy

on:
  schedule:
    - cron: "0 0 * * *" # Exécution quotidienne à minuit UTC
  workflow_dispatch: # Déclenchement manuel

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Étape 1 : Cloner le dépôt
      - name: Checkout repository
        uses: actions/checkout@v3

      # Étape 2 : Configurer Python
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # Étape 3 : Installer les dépendances Python
      - name: Install dependencies
        run: pip install requests pyyaml jinja2

      # Étape 4 : Générer un nouvel article
      - name: Generate new article
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python scripts/generate_article.py

      # Étape 5 : Mettre à jour la liste des articles (articles.json)
      - name: Generate articles list
        run: python scripts/generate_article_list.py

      # Étape 6 : Configurer Git pour pousser les changements
      - name: Configure Git
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"

      # Étape 7 : Commit des nouveaux articles et fichiers
      - name: Commit changes
        run: |
          git add content/posts/*.md articles.json
          git commit -m "Add new article and update article list [skip ci]" || echo "Rien à commit"
          git push

      # Étape 8 : Déployer sur GitHub Pages
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./

      # Étape 9 : Publier sur Mastodon
      - name: Post to Mastodon
        env:
          MASTODON_ACCESS_TOKEN: ${{ secrets.MASTODON_ACCESS_TOKEN }}
        run: python scripts/post_to_socials.py
